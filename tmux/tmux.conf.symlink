# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

set -g default-terminal "screen-256color"
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

set-option -g history-limit 50000
bind-key K send-keys -R \; clear-history

bind-key S choose-session

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key C-o rotate-window

# pane movement
bind-key m command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key M command-prompt -p "send pane to:"  "join-pane -t '%%'"

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key n next-window
bind-key p previous-window
bind-key X confirm-before -p "Kill session #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'"
bind-key Q confirm-before -p "kill-server? (y/n)" kill-server

# move windows left/right with Ctrl+Shift+<arrow>
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Swap a window by index and stay on the currently selected window
bind-key e command-prompt -p "swap window with:" "swap-window -t '%%'; select-window -t '%%'"

bind-key [ copy-mode
bind-key ] paste-buffer

# use vim-like keys for yanking/pasting
unbind-key -T copy-mode-vi Space; bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter; bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# For SSH clipboard forwarding...still can't get this to work.
# # transfer copied text to attached terminal with yank:
# # https://github.com/sunaku/home/blob/master/bin/yank
# bind-key -t vi-copy y copy-pipe 'yank > #{pane_tty}'

# # transfer copied text to attached terminal with yank:
# # https://github.com/sunaku/home/blob/master/bin/yank
# bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# # transfer previously copied text (chosen from a menu) to attached terminal:
# # https://github.com/sunaku/home/blob/master/bin/yank
# bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%\" - | yank > #{pane_tty}"'

set-option -g display-panes-time 3000

# tmux window titling for X
set-option -g set-titles on
set-option -g set-titles-string '[#I] #W'
set-window-option -g automatic-rename on

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

## Set base-index for Tmuxinator
set-window-option -g pane-base-index 1

# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set-option -sg escape-time 10

# Platform specific settings
if-shell "uname | grep -q Darwin" "source-file $DOTFILES_ROOT/tmux/tmux-osx.conf" "source-file $DOTFILES_ROOT/tmux/tmux-linux.conf"

set-option -sa terminal-overrides ',xterm-256color:RGB'

# Plugins
run-shell $DOTFILES_ROOT/_plugins/tmux-yank/yank.tmux

# Bring over useful envars from parent envs
set -g update-environment -r
